# -*- coding: utf-8 -*-
"""Lab8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VecDhAadSPssinx_SoOEJe-JlGi4A_r7
"""

!pip install -U imbalanced-learn

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from imblearn.over_sampling import SMOTE
from google.colab import files

uploaded = files.upload()
filename = list(uploaded.keys())[0]
df = pd.read_csv(filename)

df['date'] = pd.to_datetime(df['date'], format='%m%d%H%M', errors='coerce')

df['delayed'] = (df['delay'] > 15).astype(int)

top_airports = df['origin'].value_counts().nlargest(2).index.tolist()
print("Selected Airports:", top_airports)
df = df[df['origin'].isin(top_airports)]

df = pd.get_dummies(df, columns=['origin', 'destination'], drop_first=True)

X = df.drop(columns=['delay', 'date', 'delayed'])
y = df['delayed']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy_before_smote = accuracy_score(y_test, y_pred)
print("Model Accuracy:", accuracy_before_smote)

print("Classification Report:\n", classification_report(y_test, y_pred))

conf_matrix_before_smote = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(6, 4))
sns.heatmap(conf_matrix_before_smote, annot=True, fmt='d', cmap='Blues')
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()

smote = SMOTE(random_state=42)
X_train_resampled, y_train_resampled = smote.fit_resample(X_train, y_train)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train_resampled, y_train_resampled)

y_pred_resampled = model.predict(X_test)

accuracy_after_smote = accuracy_score(y_test, y_pred_resampled)
print("Model Accuracy applying SMOTE:", accuracy_after_smote)

print("Classification Report applying SMOTE:\n", classification_report(y_test, y_pred_resampled))

conf_matrix_resampled = confusion_matrix(y_test, y_pred_resampled)
plt.figure(figsize=(6, 4))
sns.heatmap(conf_matrix_resampled, annot=True, fmt='d', cmap='Blues')
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix applying SMOTE")
plt.show()

feature_importance_before = pd.Series(model.feature_importances_, index=X_train.columns)
feature_importance_before.nlargest(10).plot(kind='barh', color='skyblue', edgecolor='black')
plt.xlabel("Feature Importance")
plt.ylabel("Features")
plt.title("Top 10 Important Features Before SMOTE")
plt.show()

plt.figure(figsize=(8, 5))
plt.hist(df['delay'], bins=30, color='salmon', edgecolor='black')
plt.xlabel("Delay (minutes)")
plt.ylabel("Number of Flights")
plt.title("Distribution of Flight Delays")
plt.show()